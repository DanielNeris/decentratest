"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DecentralandStrategy = void 0;
var passport_strategy_1 = require("passport-strategy");
var verify_1 = __importDefault(require("./verify"));
var DecentralandStrategy = /** @class */ (function (_super) {
    __extends(DecentralandStrategy, _super);
    function DecentralandStrategy(options) {
        if (options === void 0) { options = {}; }
        var _this = _super.call(this) || this;
        _this.options = options;
        _this.name = 'decentraland';
        return _this;
    }
    DecentralandStrategy.prototype.authenticate = function (req, options) {
        var _this = this;
        (0, verify_1.default)(req.method, req.baseUrl + req.path, req.headers, __assign(__assign({}, this.options), options))
            .then(function (data) {
            Object.assign(req, data);
            _this.pass();
        })
            .catch(function (err) {
            if (!options.optional) {
                _this.fail(err.message, err.statusCode);
            }
            else {
                _this.pass();
            }
        });
    };
    return DecentralandStrategy;
}(passport_strategy_1.Strategy));
exports.DecentralandStrategy = DecentralandStrategy;
